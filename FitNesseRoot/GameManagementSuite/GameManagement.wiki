---
Test
---
|library|
|player management driver|

| script |
| note   | Check that non-existing players are handled OK   |
| check  | player     | Bart  | if skill   | null           |

| players with skill | intermediate |
| Player |
| Julie  |
| Bill   |

| Script | 
| $players= | player count |
| ensure | remove player | Steve |
| check | player count | <$players |
| ensure | update skill for player | Julie | to | advanced  |

| players with skill | advanced |
| Player |
| John   |
| Julie  |

!-PlayerManagementDriver.cs-!: see DuplicateCheck
!-PlayerWithSkill.cs-!
{{{using System.Collections.Generic;
using System.Linq;

namespace GameManagementTest
{
    public class PlayersWithSkill
    {
        readonly string _level;

        public PlayersWithSkill(string skillLevel) => _level = skillLevel;

        public List<object> Query() => StaticGame.Players.WithLevel(_level)
            .Select(p => new List<object> {new List<object> {"Player", p.Name}}).Cast<object>().ToList();
    }
}
}}}
